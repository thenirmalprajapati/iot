//Perform Experiment using Arduino Uno to measure the distance of any object using Ultrasonic Sensor.
#define Trigger_pin 11
#define Echo_pin 8
double duration,distance;
#define LED 7
void setup()
{
    Serial.begin(9600);
    pinMode(Trigger_pin, OUTPUT);
    pinMode(Echo_pin, INPUT);
    pinMode(LED, OUTPUT);
}
void loop()
{
    digitalWrite(Trigger_pin, LOW);
    delayMicroseconds(10);
    digitalWrite(Trigger_pin, HIGH);
    delayMicroseconds(10);
    digitalWrite(Trigger_pin, LOW);
    duration = pulseIn(Echo_pin, HIGH);
    distance = duration * 0.034 / 2;
    if (distance < 20)
    {
        digitalWrite(LED, HIGH);
    }
    else
    {
        digitalWrite(LED, LOW);
    }
    Serial.println(duration);
    Serial.print(distance);
    Serial.println("cm");
    delay(1000);
}


===============================================================

//Perform experiment using IR Motion Sensor for Motion Detection.
int LED = 6;
int isObstaclePin = 13;
int isObstacle = HIGH;
void setup()
{
    pinMode(isObstaclePin, INPUT);
    pinMode(LED, OUTPUT);
    Serial.begin(9600);
}
void loop()
{
    isObstacle = digitalRead(isObstaclePin);
    if (isObstacle == LOW)
    {
        Serial.println("OBSTACLE FOUND");
        digitalWrite(LED, HIGH);
    }
    else
    {
        Serial.println("OBSTACLE NOT FOUND");
        digitalWrite(LED, LOW);
    }
}


===============================================


//Interfacing of Temperature sensor.
#include <OneWire.h>
#include <DallasTemperature.h>
    OneWire oneWire(ONEWIREBUS);
DallasTemperature sensors(&oneWire);
void setup()
{
    Serial.begin(9600);
    pinMode(ONEWIREBUS, INPUT);
    Serial.println();
    sensors.begin();
}
void loop()
{
    // put your main code here, to run repeatedly:
    sensors.requestTemperatures();
    Serial.println("Done");
    Serial.println("Temp = ");
    Serial.println("temprature for pne device index(0)");
    delay(1000);
    Serial.println(sensors.getTempCByIndex(0));
    if (sensors.getTempCByIndex(0) > 28)
    {
        Serial.println(sensors.getTempCByIndex(0));
    }
}

=================================================


//Interfacing of a Gas Sensor with Arduino.
#define yellowLED 12
#define redLED 13
    double sensorValue;
void setup()
{
    Serial.begin(9600);
    pinMode(yellowLED, OUTPUT);
    pinMode(redLED, OUTPUT);
    pinMode(A0, INPUT);
}
void loop()
{
    sensorValue = analogRead(A0);
    if (sensorValue > 250 && sensorValue < 350)
    {
        digitalWrite(yellowLED, HIGH);
    }
    else if (sensorValue > 350)
    {
        digitalWrite(yellowLED, LOW);
        digitalWrite(redLED, HIGH);
    }
    else
    {
        digitalWrite(yellowLED, LOW);
        digitalWrite(redLED, LOW);
    }
    Serial.println(sensorValue);
    delay(1000); // Wait for 1000 millisecond(s)
}


==========================================

//To interface LED/Buzzer with Arduino/Raspberry Pi and write a program to turn ON LED for 1 sec after every 2 seconds.
int LED_BUILTIN = 7;
void setup()
{
    pinMode(LED_BUILTIN, OUTPUT);
}
void loop()
{
    digitalWrite(LED_BUILTIN, HIGH);
    delay(1000); // Wait for 1000 millisecond(s)
    digitalWrite(LED_BUILTIN, LOW);
    delay(1000); // Wait for 1000 millisecond(s)
}

=========================================

//To interface LDR with Arduino and write a program to turn ON LED when light intensity increases.
#define LED A2
#define LDR A1
int LDRread;
int brightness = 200;
void setup()
{
    pinMode(LED, OUTPUT);
    pinMode(LDR, INPUT);
    Serial.begin(9600);
}
void loop()
{
    LDRread = analogRead(LDR);
    LDRread = map(LDRread, 0, 1023, 0, 200);
    Serial.println(LDRread);
    analogWrite(LED, brightness - LDRread);
    delay(1000);
}